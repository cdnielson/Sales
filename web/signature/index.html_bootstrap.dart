library app_bootstrap;

import 'package:polymer/polymer.dart';

import 'package:core_elements/core_toolbar.dart' as i0;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_media_query.dart' as i1;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_selection.dart' as i2;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_selector.dart' as i3;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_drawer_panel.dart' as i4;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_header_panel.dart' as i5;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_meta.dart' as i6;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_iconset.dart' as i7;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_icon.dart' as i8;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_iconset_svg.dart' as i9;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_icon_button.dart' as i10;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_scaffold.dart' as i11;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_menu.dart' as i12;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_item.dart' as i13;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_transition.dart' as i14;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_key_helper.dart' as i15;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_overlay_layer.dart' as i16;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_overlay.dart' as i17;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_pages.dart' as i18;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_xhr_dart.dart' as i19;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_ajax_dart.dart' as i20;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_input.dart' as i21;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_style.dart' as i22;
import 'package:polymer/src/build/log_injector.dart';
import 'package:paper_elements/paper_input_decorator.dart' as i23;
import 'package:polymer/src/build/log_injector.dart';
import 'package:paper_elements/paper_input.dart' as i24;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_transition_css.dart' as i25;
import 'package:polymer/src/build/log_injector.dart';
import 'package:paper_elements/paper_shadow.dart' as i26;
import 'package:polymer/src/build/log_injector.dart';
import 'package:paper_elements/paper_dialog_base.dart' as i27;
import 'package:polymer/src/build/log_injector.dart';
import 'package:paper_elements/paper_dialog.dart' as i28;
import 'package:polymer/src/build/log_injector.dart';
import 'package:paper_elements/paper_dialog_transition.dart' as i29;
import 'package:polymer/src/build/log_injector.dart';
import 'package:core_elements/core_a11y_keys.dart' as i30;
import 'package:polymer/src/build/log_injector.dart';
import 'package:paper_elements/paper_ripple.dart' as i31;
import 'package:polymer/src/build/log_injector.dart';
import 'package:paper_elements/paper_radio_button.dart' as i32;
import 'package:polymer/src/build/log_injector.dart';
import 'package:paper_elements/paper_radio_group.dart' as i33;
import 'package:polymer/src/build/log_injector.dart';
import 'package:Lashbrook_Sales/views/app_view/rings_view.dart' as i34;
import 'package:polymer/src/build/log_injector.dart';
import 'index.html.0.dart' as i35;
import 'package:polymer/src/build/log_injector.dart';
import 'package:smoke/smoke.dart' show Declaration, PROPERTY, METHOD;
import 'package:smoke/static.dart' show useGeneratedCode, StaticConfiguration;
import 'package:core_elements/core_xhr_dart.dart' as smoke_0;
import 'package:polymer/polymer.dart' as smoke_1;
import 'package:core_elements/core_ajax_dart.dart' as smoke_2;
import 'package:observe/src/metadata.dart' as smoke_3;
import 'package:Lashbrook_Sales/views/app_view/rings_view.dart' as smoke_4;
abstract class _M0 {} // PolymerElement & ChangeNotifier

void main() {
  useGeneratedCode(new StaticConfiguration(
      checkedMode: false,
      getters: {
        #SKU: (o) => o.SKU,
        #accDataLoaded: (o) => o.accDataLoaded,
        #accessories: (o) => o.accessories,
        #accessory: (o) => o.accessory,
        #accessoryData: (o) => o.accessoryData,
        #addItem: (o) => o.addItem,
        #addRing: (o) => o.addRing,
        #added: (o) => o.added,
        #addeditem: (o) => o.addeditem,
        #additionalTierCost: (o) => o.additionalTierCost,
        #addremove: (o) => o.addremove,
        #auto: (o) => o.auto,
        #autoChanged: (o) => o.autoChanged,
        #back: (o) => o.back,
        #body: (o) => o.body,
        #bodyChanged: (o) => o.bodyChanged,
        #boundData: (o) => o.boundData,
        #cancelSubmit: (o) => o.cancelSubmit,
        #cancelTierChange: (o) => o.cancelTierChange,
        #category: (o) => o.category,
        #change2ndTier: (o) => o.change2ndTier,
        #checkPin: (o) => o.checkPin,
        #clearTiers: (o) => o.clearTiers,
        #cleared: (o) => o.cleared,
        #closeSignature: (o) => o.closeSignature,
        #closeTypeSku: (o) => o.closeTypeSku,
        #closeZoom: (o) => o.closeZoom,
        #contentLabel: (o) => o.contentLabel,
        #contentLabel2: (o) => o.contentLabel2,
        #contentType: (o) => o.contentType,
        #continueSubmit: (o) => o.continueSubmit,
        #currentNewTier: (o) => o.currentNewTier,
        #currentTier: (o) => o.currentTier,
        #currentTierSelection: (o) => o.currentTierSelection,
        #currentUser: (o) => o.currentUser,
        #dataLoaded: (o) => o.dataLoaded,
        #error: (o) => o.error,
        #failedLogin: (o) => o.failedLogin,
        #failedText: (o) => o.failedText,
        #filter: (o) => o.filter,
        #finalAdded: (o) => o.finalAdded,
        #finalAddedItem: (o) => o.finalAddedItem,
        #finalRemoved: (o) => o.finalRemoved,
        #finalSubTotalCost: (o) => o.finalSubTotalCost,
        #finish: (o) => o.finish,
        #handleAs: (o) => o.handleAs,
        #header: (o) => o.header,
        #headers: (o) => o.headers,
        #heading: (o) => o.heading,
        #hide2ndTier: (o) => o.hide2ndTier,
        #hideAccessories: (o) => o.hideAccessories,
        #hideCannotHaveBlank: (o) => o.hideCannotHaveBlank,
        #hideCloseAccButton: (o) => o.hideCloseAccButton,
        #hideCloseOtherButton: (o) => o.hideCloseOtherButton,
        #hideComplete: (o) => o.hideComplete,
        #hideFinal: (o) => o.hideFinal,
        #hideMenus: (o) => o.hideMenus,
        #hideOtherRings: (o) => o.hideOtherRings,
        #hideRings: (o) => o.hideRings,
        #hideSignature: (o) => o.hideSignature,
        #hideSignatureRequired: (o) => o.hideSignatureRequired,
        #hideSubmit: (o) => o.hideSubmit,
        #hideSubmitButton: (o) => o.hideSubmitButton,
        #hideZoom: (o) => o.hideZoom,
        #icon: (o) => o.icon,
        #image: (o) => o.image,
        #imagePath: (o) => o.imagePath,
        #loading: (o) => o.loading,
        #loginData: (o) => o.loginData,
        #loginList: (o) => o.loginList,
        #loginLoaded: (o) => o.loginLoaded,
        #method: (o) => o.method,
        #numpadAction: (o) => o.numpadAction,
        #openIt: (o) => o.openIt,
        #openIt2: (o) => o.openIt2,
        #openLogIn: (o) => o.openLogIn,
        #otherDataLoaded: (o) => o.otherDataLoaded,
        #otherItemsCost: (o) => o.otherItemsCost,
        #otherRingCost: (o) => o.otherRingCost,
        #otherRingData: (o) => o.otherRingData,
        #otherRings: (o) => o.otherRings,
        #params: (o) => o.params,
        #paramsChanged: (o) => o.paramsChanged,
        #pathToAccessoryData: (o) => o.pathToAccessoryData,
        #pathToData: (o) => o.pathToData,
        #pathToLogin: (o) => o.pathToLogin,
        #pathToOtherData: (o) => o.pathToOtherData,
        #pin1: (o) => o.pin1,
        #pin2: (o) => o.pin2,
        #pin3: (o) => o.pin3,
        #pin4: (o) => o.pin4,
        #price: (o) => o.price,
        #progress: (o) => o.progress,
        #removeRing: (o) => o.removeRing,
        #removeTypedSku: (o) => o.removeTypedSku,
        #removed: (o) => o.removed,
        #reset: (o) => o.reset,
        #response: (o) => o.response,
        #ring: (o) => o.ring,
        #ringZoomData: (o) => o.ringZoomData,
        #ringZoomImage: (o) => o.ringZoomImage,
        #search: (o) => o.search,
        #selectAction: (o) => o.selectAction,
        #selectAction2: (o) => o.selectAction2,
        #selected: (o) => o.selected,
        #selectedLabel: (o) => o.selectedLabel,
        #shippingCosts: (o) => o.shippingCosts,
        #showTypeSku: (o) => o.showTypeSku,
        #signatureSubmit: (o) => o.signatureSubmit,
        #startOver: (o) => o.startOver,
        #subTotalCost: (o) => o.subTotalCost,
        #submitOrder: (o) => o.submitOrder,
        #submitTypeSku: (o) => o.submitTypeSku,
        #tier: (o) => o.tier,
        #tierCost: (o) => o.tierCost,
        #tierData: (o) => o.tierData,
        #tierDataNew: (o) => o.tierDataNew,
        #tierList: (o) => o.tierList,
        #totalPlusShipping: (o) => o.totalPlusShipping,
        #typeInASku: (o) => o.typeInASku,
        #typedSku: (o) => o.typedSku,
        #typedSkus: (o) => o.typedSkus,
        #url: (o) => o.url,
        #urlChanged: (o) => o.urlChanged,
        #warningtext: (o) => o.warningtext,
        #withCredentials: (o) => o.withCredentials,
        #zoomAccessory: (o) => o.zoomAccessory,
        #zoomOther: (o) => o.zoomOther,
        #zoomRing: (o) => o.zoomRing,
      },
      setters: {
        #SKU: (o, v) { o.SKU = v; },
        #accessories: (o, v) { o.accessories = v; },
        #accessoryData: (o, v) { o.accessoryData = v; },
        #additionalTierCost: (o, v) { o.additionalTierCost = v; },
        #addremove: (o, v) { o.addremove = v; },
        #auto: (o, v) { o.auto = v; },
        #body: (o, v) { o.body = v; },
        #boundData: (o, v) { o.boundData = v; },
        #checkPin: (o, v) { o.checkPin = v; },
        #contentLabel: (o, v) { o.contentLabel = v; },
        #contentLabel2: (o, v) { o.contentLabel2 = v; },
        #contentType: (o, v) { o.contentType = v; },
        #currentNewTier: (o, v) { o.currentNewTier = v; },
        #currentTier: (o, v) { o.currentTier = v; },
        #currentTierSelection: (o, v) { o.currentTierSelection = v; },
        #currentUser: (o, v) { o.currentUser = v; },
        #error: (o, v) { o.error = v; },
        #failedLogin: (o, v) { o.failedLogin = v; },
        #failedText: (o, v) { o.failedText = v; },
        #finalAdded: (o, v) { o.finalAdded = v; },
        #finalAddedItem: (o, v) { o.finalAddedItem = v; },
        #finalRemoved: (o, v) { o.finalRemoved = v; },
        #finalSubTotalCost: (o, v) { o.finalSubTotalCost = v; },
        #handleAs: (o, v) { o.handleAs = v; },
        #header: (o, v) { o.header = v; },
        #headers: (o, v) { o.headers = v; },
        #hide2ndTier: (o, v) { o.hide2ndTier = v; },
        #hideAccessories: (o, v) { o.hideAccessories = v; },
        #hideCannotHaveBlank: (o, v) { o.hideCannotHaveBlank = v; },
        #hideCloseAccButton: (o, v) { o.hideCloseAccButton = v; },
        #hideCloseOtherButton: (o, v) { o.hideCloseOtherButton = v; },
        #hideComplete: (o, v) { o.hideComplete = v; },
        #hideFinal: (o, v) { o.hideFinal = v; },
        #hideMenus: (o, v) { o.hideMenus = v; },
        #hideOtherRings: (o, v) { o.hideOtherRings = v; },
        #hideRings: (o, v) { o.hideRings = v; },
        #hideSignature: (o, v) { o.hideSignature = v; },
        #hideSignatureRequired: (o, v) { o.hideSignatureRequired = v; },
        #hideSubmit: (o, v) { o.hideSubmit = v; },
        #hideSubmitButton: (o, v) { o.hideSubmitButton = v; },
        #hideZoom: (o, v) { o.hideZoom = v; },
        #icon: (o, v) { o.icon = v; },
        #loading: (o, v) { o.loading = v; },
        #loginData: (o, v) { o.loginData = v; },
        #loginList: (o, v) { o.loginList = v; },
        #method: (o, v) { o.method = v; },
        #openIt: (o, v) { o.openIt = v; },
        #openIt2: (o, v) { o.openIt2 = v; },
        #openLogIn: (o, v) { o.openLogIn = v; },
        #otherItemsCost: (o, v) { o.otherItemsCost = v; },
        #otherRingCost: (o, v) { o.otherRingCost = v; },
        #otherRingData: (o, v) { o.otherRingData = v; },
        #otherRings: (o, v) { o.otherRings = v; },
        #params: (o, v) { o.params = v; },
        #pathToAccessoryData: (o, v) { o.pathToAccessoryData = v; },
        #pathToData: (o, v) { o.pathToData = v; },
        #pathToLogin: (o, v) { o.pathToLogin = v; },
        #pathToOtherData: (o, v) { o.pathToOtherData = v; },
        #pin1: (o, v) { o.pin1 = v; },
        #pin2: (o, v) { o.pin2 = v; },
        #pin3: (o, v) { o.pin3 = v; },
        #pin4: (o, v) { o.pin4 = v; },
        #progress: (o, v) { o.progress = v; },
        #response: (o, v) { o.response = v; },
        #ringZoomData: (o, v) { o.ringZoomData = v; },
        #ringZoomImage: (o, v) { o.ringZoomImage = v; },
        #search: (o, v) { o.search = v; },
        #selected: (o, v) { o.selected = v; },
        #selectedLabel: (o, v) { o.selectedLabel = v; },
        #shippingCosts: (o, v) { o.shippingCosts = v; },
        #showTypeSku: (o, v) { o.showTypeSku = v; },
        #subTotalCost: (o, v) { o.subTotalCost = v; },
        #tierCost: (o, v) { o.tierCost = v; },
        #tierData: (o, v) { o.tierData = v; },
        #tierDataNew: (o, v) { o.tierDataNew = v; },
        #tierList: (o, v) { o.tierList = v; },
        #totalPlusShipping: (o, v) { o.totalPlusShipping = v; },
        #typedSkus: (o, v) { o.typedSkus = v; },
        #url: (o, v) { o.url = v; },
        #warningtext: (o, v) { o.warningtext = v; },
        #withCredentials: (o, v) { o.withCredentials = v; },
      },
      parents: {
        smoke_4.RingsView: _M0,
        smoke_2.CoreAjax: _M0,
        smoke_0.CoreXhr: smoke_1.PolymerElement,
        _M0: smoke_1.PolymerElement,
      },
      declarations: {
        smoke_4.RingsView: {
          #accessories: const Declaration(#accessories, List, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #accessoryData: const Declaration(#accessoryData, List, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #additionalTierCost: const Declaration(#additionalTierCost, int, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #addremove: const Declaration(#addremove, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #boundData: const Declaration(#boundData, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #checkPin: const Declaration(#checkPin, List, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #contentLabel: const Declaration(#contentLabel, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #contentLabel2: const Declaration(#contentLabel2, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #currentNewTier: const Declaration(#currentNewTier, List, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #currentTier: const Declaration(#currentTier, List, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #currentTierSelection: const Declaration(#currentTierSelection, int, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #currentUser: const Declaration(#currentUser, List, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #failedLogin: const Declaration(#failedLogin, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #failedText: const Declaration(#failedText, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #finalAdded: const Declaration(#finalAdded, dynamic, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #finalAddedItem: const Declaration(#finalAddedItem, dynamic, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #finalRemoved: const Declaration(#finalRemoved, dynamic, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #finalSubTotalCost: const Declaration(#finalSubTotalCost, int, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #header: const Declaration(#header, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #hide2ndTier: const Declaration(#hide2ndTier, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #hideAccessories: const Declaration(#hideAccessories, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #hideCannotHaveBlank: const Declaration(#hideCannotHaveBlank, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #hideCloseAccButton: const Declaration(#hideCloseAccButton, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #hideCloseOtherButton: const Declaration(#hideCloseOtherButton, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #hideComplete: const Declaration(#hideComplete, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #hideFinal: const Declaration(#hideFinal, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #hideMenus: const Declaration(#hideMenus, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #hideOtherRings: const Declaration(#hideOtherRings, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #hideRings: const Declaration(#hideRings, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #hideSignature: const Declaration(#hideSignature, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #hideSignatureRequired: const Declaration(#hideSignatureRequired, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #hideSubmit: const Declaration(#hideSubmit, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #hideSubmitButton: const Declaration(#hideSubmitButton, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #hideZoom: const Declaration(#hideZoom, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #icon: const Declaration(#icon, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #loginData: const Declaration(#loginData, List, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #loginList: const Declaration(#loginList, List, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #openIt: const Declaration(#openIt, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #openIt2: const Declaration(#openIt2, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #openLogIn: const Declaration(#openLogIn, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #otherItemsCost: const Declaration(#otherItemsCost, int, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #otherRingCost: const Declaration(#otherRingCost, int, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #otherRingData: const Declaration(#otherRingData, List, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #otherRings: const Declaration(#otherRings, List, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #pin1: const Declaration(#pin1, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #pin2: const Declaration(#pin2, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #pin3: const Declaration(#pin3, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #pin4: const Declaration(#pin4, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #ringZoomData: const Declaration(#ringZoomData, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #ringZoomImage: const Declaration(#ringZoomImage, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #search: const Declaration(#search, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #selected: const Declaration(#selected, int, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #selectedLabel: const Declaration(#selectedLabel, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #shippingCosts: const Declaration(#shippingCosts, int, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #showTypeSku: const Declaration(#showTypeSku, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #subTotalCost: const Declaration(#subTotalCost, int, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #tierCost: const Declaration(#tierCost, int, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #tierData: const Declaration(#tierData, List, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #tierDataNew: const Declaration(#tierDataNew, List, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #tierList: const Declaration(#tierList, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #totalPlusShipping: const Declaration(#totalPlusShipping, int, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #typedSkus: const Declaration(#typedSkus, List, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
          #warningtext: const Declaration(#warningtext, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_3.observable]),
        },
        smoke_2.CoreAjax: {
          #auto: const Declaration(#auto, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_1.published]),
          #autoChanged: const Declaration(#autoChanged, Function, kind: METHOD),
          #body: const Declaration(#body, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_1.published]),
          #bodyChanged: const Declaration(#bodyChanged, Function, kind: METHOD),
          #contentType: const Declaration(#contentType, String),
          #error: const Declaration(#error, dynamic, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_1.published]),
          #handleAs: const Declaration(#handleAs, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_1.published]),
          #headers: const Declaration(#headers, Map, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_1.published]),
          #loading: const Declaration(#loading, bool, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_1.published]),
          #method: const Declaration(#method, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_1.published]),
          #params: const Declaration(#params, dynamic, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_1.published]),
          #paramsChanged: const Declaration(#paramsChanged, Function, kind: METHOD),
          #progress: const Declaration(#progress, smoke_2.CoreAjaxProgress, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_1.published]),
          #response: const Declaration(#response, dynamic, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_1.published]),
          #url: const Declaration(#url, String, kind: PROPERTY, annotations: const [smoke_3.reflectable, smoke_1.published]),
          #urlChanged: const Declaration(#urlChanged, Function, kind: METHOD),
          #withCredentials: const Declaration(#withCredentials, bool),
        },
        smoke_0.CoreXhr: {},
      },
      names: {
        #SKU: r'SKU',
        #accDataLoaded: r'accDataLoaded',
        #accessories: r'accessories',
        #accessory: r'accessory',
        #accessoryData: r'accessoryData',
        #addItem: r'addItem',
        #addRing: r'addRing',
        #added: r'added',
        #addeditem: r'addeditem',
        #additionalTierCost: r'additionalTierCost',
        #addremove: r'addremove',
        #auto: r'auto',
        #autoChanged: r'autoChanged',
        #back: r'back',
        #body: r'body',
        #bodyChanged: r'bodyChanged',
        #boundData: r'boundData',
        #cancelSubmit: r'cancelSubmit',
        #cancelTierChange: r'cancelTierChange',
        #category: r'category',
        #change2ndTier: r'change2ndTier',
        #checkPin: r'checkPin',
        #clearTiers: r'clearTiers',
        #cleared: r'cleared',
        #closeSignature: r'closeSignature',
        #closeTypeSku: r'closeTypeSku',
        #closeZoom: r'closeZoom',
        #contentLabel: r'contentLabel',
        #contentLabel2: r'contentLabel2',
        #contentType: r'contentType',
        #continueSubmit: r'continueSubmit',
        #currentNewTier: r'currentNewTier',
        #currentTier: r'currentTier',
        #currentTierSelection: r'currentTierSelection',
        #currentUser: r'currentUser',
        #dataLoaded: r'dataLoaded',
        #error: r'error',
        #failedLogin: r'failedLogin',
        #failedText: r'failedText',
        #filter: r'filter',
        #finalAdded: r'finalAdded',
        #finalAddedItem: r'finalAddedItem',
        #finalRemoved: r'finalRemoved',
        #finalSubTotalCost: r'finalSubTotalCost',
        #finish: r'finish',
        #handleAs: r'handleAs',
        #header: r'header',
        #headers: r'headers',
        #heading: r'heading',
        #hide2ndTier: r'hide2ndTier',
        #hideAccessories: r'hideAccessories',
        #hideCannotHaveBlank: r'hideCannotHaveBlank',
        #hideCloseAccButton: r'hideCloseAccButton',
        #hideCloseOtherButton: r'hideCloseOtherButton',
        #hideComplete: r'hideComplete',
        #hideFinal: r'hideFinal',
        #hideMenus: r'hideMenus',
        #hideOtherRings: r'hideOtherRings',
        #hideRings: r'hideRings',
        #hideSignature: r'hideSignature',
        #hideSignatureRequired: r'hideSignatureRequired',
        #hideSubmit: r'hideSubmit',
        #hideSubmitButton: r'hideSubmitButton',
        #hideZoom: r'hideZoom',
        #icon: r'icon',
        #image: r'image',
        #imagePath: r'imagePath',
        #loading: r'loading',
        #loginData: r'loginData',
        #loginList: r'loginList',
        #loginLoaded: r'loginLoaded',
        #method: r'method',
        #numpadAction: r'numpadAction',
        #openIt: r'openIt',
        #openIt2: r'openIt2',
        #openLogIn: r'openLogIn',
        #otherDataLoaded: r'otherDataLoaded',
        #otherItemsCost: r'otherItemsCost',
        #otherRingCost: r'otherRingCost',
        #otherRingData: r'otherRingData',
        #otherRings: r'otherRings',
        #params: r'params',
        #paramsChanged: r'paramsChanged',
        #pathToAccessoryData: r'pathToAccessoryData',
        #pathToData: r'pathToData',
        #pathToLogin: r'pathToLogin',
        #pathToOtherData: r'pathToOtherData',
        #pin1: r'pin1',
        #pin2: r'pin2',
        #pin3: r'pin3',
        #pin4: r'pin4',
        #price: r'price',
        #progress: r'progress',
        #removeRing: r'removeRing',
        #removeTypedSku: r'removeTypedSku',
        #removed: r'removed',
        #reset: r'reset',
        #response: r'response',
        #ring: r'ring',
        #ringZoomData: r'ringZoomData',
        #ringZoomImage: r'ringZoomImage',
        #search: r'search',
        #selectAction: r'selectAction',
        #selectAction2: r'selectAction2',
        #selected: r'selected',
        #selectedLabel: r'selectedLabel',
        #shippingCosts: r'shippingCosts',
        #showTypeSku: r'showTypeSku',
        #signatureSubmit: r'signatureSubmit',
        #startOver: r'startOver',
        #subTotalCost: r'subTotalCost',
        #submitOrder: r'submitOrder',
        #submitTypeSku: r'submitTypeSku',
        #tier: r'tier',
        #tierCost: r'tierCost',
        #tierData: r'tierData',
        #tierDataNew: r'tierDataNew',
        #tierList: r'tierList',
        #totalPlusShipping: r'totalPlusShipping',
        #typeInASku: r'typeInASku',
        #typedSku: r'typedSku',
        #typedSkus: r'typedSkus',
        #url: r'url',
        #urlChanged: r'urlChanged',
        #warningtext: r'warningtext',
        #withCredentials: r'withCredentials',
        #zoomAccessory: r'zoomAccessory',
        #zoomOther: r'zoomOther',
        #zoomRing: r'zoomRing',
      }));
  new LogInjector().injectLogsFromUrl('index.html._buildLogs');
  configureForDeployment([
      i0.upgradeCoreToolbar,
      i1.upgradeCoreMediaQuery,
      i2.upgradeCoreSelection,
      i3.upgradeCoreSelector,
      i4.upgradeCoreDrawerPanel,
      i5.upgradeCoreHeaderPanel,
      i6.upgradeCoreMeta,
      i7.upgradeCoreIconset,
      i8.upgradeCoreIcon,
      i9.upgradeCoreIconsetSvg,
      i10.upgradeCoreIconButton,
      i11.upgradeCoreScaffold,
      i12.upgradeCoreMenu,
      i13.upgradeCoreItem,
      i14.upgradeCoreTransition,
      i15.upgradeCoreKeyHelper,
      i16.upgradeCoreOverlayLayer,
      i17.upgradeCoreOverlay,
      i18.upgradeCorePages,
      () => Polymer.register('core-xhr-dart', i19.CoreXhr),
      () => Polymer.register('core-ajax-dart', i20.CoreAjax),
      i21.upgradeCoreInput,
      i22.upgradeCoreStyle,
      i23.upgradePaperInputDecorator,
      i24.upgradePaperInput,
      i25.upgradeCoreTransitionCss,
      i26.upgradePaperShadow,
      i27.upgradePaperDialogBase,
      i28.upgradePaperDialog,
      i29.upgradePaperDialogTransition,
      i30.upgradeCoreA11yKeys,
      i31.upgradePaperRipple,
      i32.upgradePaperRadioButton,
      i33.upgradePaperRadioGroup,
      () => Polymer.register('rings-view', i34.RingsView),
    ]);
  i35.main();
}
